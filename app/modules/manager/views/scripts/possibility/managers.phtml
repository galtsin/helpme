<?php
// Справочник ролей для JS
$roles = array();
foreach(HM_Model_Account_Access::getInstance()->getRoles() as $role) {
    $roles[] = $role->toArray();
}
$rolesJson = Zend_Json::encode($roles);

// Справочник для JS
$rolesWithInheritance = $companiesIndex= array();
foreach($this->rolesWithInheritance as $roleIdentifier => $companies) {
    $rolesWithInheritance[] = array(
        'code'      => $roleIdentifier,
        'companies' => $companies
    );
    $companiesIndex = array_merge($companiesIndex, $companies);
}
$rolesWithInheritanceJson = Zend_Json::encode($rolesWithInheritance);

// Справочник для JS
$companyColl = new HM_Model_Billing_Company_Collection();
foreach(array_values(array_unique($companiesIndex)) as $company) {
    $companyColl->load($company);
}
$companiesJson = Zend_Json::encode($companyColl->toArray());

?>
<?php
$jScript = <<<JS
require([
    "dojo/dom",
    "dojo/dom-attr",
    "dojo/dom-form",
    "dojo/on",
    "dojo/_base/lang",
    "dojo/query",
    "dojo/router",
    "dojo/store/Memory",
    "core/Layout",
    "core/helper/Validation",
    "core/helper/Form",
    "dijit/Dialog"
], function(dom, domAttr, domForm, on, lang, query, router, storeMemory, coreLayout, coreValidation, coreHelperForm, dijitDialog){
    dojo.ready(function(){

        var Layout = new coreLayout({
            messenger: {
                node: dom.byId('messenger')
                },
            processing: {
                node: dom.byId('loader')
                }
        });

        // Хранилище системных ролей
        var storeRoles = new storeMemory({data: $rolesJson});

        // Хранилище информации о компаниях доступных текущему администратору
        var storeCompanies = new storeMemory({data: $companiesJson});

        // Связка связи Роль-Компания
        var storeHierarchyRoleAndCompanies = new storeMemory({data: $rolesWithInheritanceJson});

        // Экземпляр диалогового окна
        var DialogBox = new dijitDialog();

        // Загрузить список доступных Менеджеров
        dojo.subscribe('getManagers', function(){
            Layout.load({
                url:    '../../../manager/possibility/get-managers',
                format: 'html'
            }).then(function(response){
                Layout.place(dom.byId('contentManagers'), response);
            }).then(function(){
                // Событие на получение менеджера
                query('[data-action^="getManagerBoard/"]').on('click', function(event){
                    event.preventDefault();
                    router.go(event.target.getAttribute("data-action"));
                });
                // Событие на добавление нового менеджера
                query('[data-action^="addPossibility"]').on('click', function(event){
                    event.preventDefault();
                    dojo.publish('addPossibility');
                });
                // Событие на удаление менеджера
                query('[data-action^="removeManagers"]').on('click', function(event){
                    event.preventDefault();
                    dojo.publish('removeManagers', domForm.toObject(event.target.form));
                });
            });
        });

        // Загрузить Панель Управления Менеджера
        dojo.subscribe('getManagerBoard', function(args){
            Layout.load({
                url:    '../../../manager/possibility/get-manager-board',
                format: 'html',
                args:   args
            }).then(function(response){
                Layout.place(dom.byId('contentManagers'), response);
            }).then(function(){
                // Навешиваем события
                query('[data-action^="editPossibilityObjects"]').on('click', function(event){
                    event.preventDefault();
                    dojo.publish('editPossibilityObjects', {possibility: domAttr.get(event.target, "data-action").split('/')[1]});
                });
            }).then(function(){
                query('[data-action^="addPossibility"]').on('click', function(event){
                    event.preventDefault();
                    dojo.publish('addPossibility', {manager: domAttr.get(event.target, "data-action").split('/')[1]});
                });
            }).then(function(){
                query('[data-action^="removePossibility"]').on('click', function(event){
                    event.preventDefault();
                    dojo.publish('removePossibility', {
                            possibility: domAttr.get(event.target, "data-action").split('/')[1],
                            manager: args['manager']
                        }
                    );
                });
            })
        });

        dojo.subscribe('removeManagers', function(args){
            Layout.send({
                url:    '../../../manager/possibility/remove-managers',
                args:   args
            }).then(function(response){
                if(response.result && response.result != -1) {
                    dojo.publish('getManagers');
                }
            });
        });

        // Редактирование объектов прав
        dojo.subscribe('editPossibilityObjects', function(args){
            Layout.load({
                url:    appConfig.baseUrl + '/manager/possibility/edit-possibility-objects',
                format: 'html',
                args:   args
            }).then(function(response){
                DialogBox.set('content', response);
                DialogBox.set('title', "Редактирование ресурсов");
                DialogBox.show();
            }).then(function(){
                var form = dom.byId('edit-possibility-objects');
                // Событие на добавление объекта
                on(form['add'], 'click', function(){
                    coreHelperForm.moveSelectedOptions(form['available'], form['selected']);
                });
                // Событие на удаление объекта
                on(form['remove'], 'click', function(){
                    coreHelperForm.moveSelectedOptions(form['selected'], form['available']);
                });
                // Событие на сохранение изменений
                on(dom.byId('_d_'), 'click', function(event){
                    var selected = [];
                    for(var i = 0, len = form['selected'].options.length; i < len; i ++) {
                        selected.push(form['selected'].options[i].value);
                    }
                    var args = domForm.toObject(event.target.form);
                    args['objects[]'] = selected;
                    Layout.send({
                        url:    appConfig.baseUrl + '/manager/possibility/edit-possibility-objects',
                        args:   args
                    }).then(function(response){
                        if(response.result && response.result != -1) {
                            DialogBox.hide();
                        }
                    });
                });
            })
        });

        // Удалить права у Менеджера
        dojo.subscribe('removePossibility', function(args){
            Layout.send({
                url:    appConfig.baseUrl + '/manager/possibility/remove-possibility',
                args:   args
            }).then(function(response){
                if(response.result && response.result != -1) {
                    dojo.publish('getManagerBoard', args);
                }
            })
        });

        // Добавление новых прав
        dojo.subscribe('addPossibility', function(args){
            Layout.load({
                url:    appConfig.baseUrl + '/manager/possibility/add-possibility',
                format: 'html',
                args:   args
            }).then(function(response){
                DialogBox.set('content', response);
                DialogBox.set('title', "Редактирование ресурсов");

                var form = dom.byId('add-possibility');
                var Validation = new coreValidation(form);
                var formEvents = {
                    changeRole: function(){
                        storeHierarchyRoleAndCompanies.query({'code': storeRoles.get(domForm.fieldToObject(form['possibility[role]']))['data']['code']}).forEach(function(items){
                            var html = '';
                            dojo.forEach(items['companies'], function(company){
                                html += '<option value="' + company + '" >' + storeCompanies.get(company)['data']['name'] + '</option>';
                            });
                            form['possibility[company]'].length = 0;
                            form['possibility[company]'].innerHTML = html;
                        });
                    },
                    onSend: function(){
                        if(Validation.isValid()) {
                            Layout.send({
                                url:    appConfig.baseUrl + '/manager/possibility/add-possibility',
                                args:   domForm.toObject(form)
                            }).then(function(response){
                                 if(response.result && response.result != -1) {
                                    DialogBox.hide();
                                    setTimeout(function(){
                                        if(form['possibility[user]']) {
                                            dojo.publish('getManagerBoard', {manager: domForm.fieldToObject(form['possibility[user]'])});
                                        } else {
                                            dojo.publish('getManagers');
                                        }
                                    }, Layout._delay);
                                } else {
                                    Validation.clear();
                                    Validation.setMessages(response.error);
                                }
                            });
                        }
                    }
                };

                on(form['possibility[role]'], 'change', formEvents.changeRole);
                on(form['send'], 'click', formEvents.onSend);

                (function(){
                    formEvents.changeRole();
                    DialogBox.show();
                })();
            });
        });

        // #Страница с менеджерами
        router.register('getManagers', function(){
            dojo.publish('getManagers');
        });

        // #Страница с настройками одного менеджера
        router.register('getManagerBoard/:manager', function(event){
            dojo.publish('getManagerBoard', event.params);
        });

        // Активируем роутер
        router.startup();
        router.go('getManagers');

    });
});

JS;
$this->headScript()->appendScript($jScript, $type = 'text/javascript')
?>
<div id="contentManagers">
</div>