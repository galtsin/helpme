<?php
$rolesArray = array();
$userColl = new HM_Model_Account_User_Collection();
$companyColl = new HM_Model_Billing_Company_Collection();
$possibilities = $this->possibilities;

// Справочник ролей
foreach(HM_Model_Account_Access::getInstance()->getRoles() as $role) {
    $rolesArray[] = $role->toArray();
}

// Справочник компаний
foreach($possibilities as $possibility) {
    $companyColl->load($possibility['company']);
}

// Список менеджеров
foreach($possibilities as $possibility) {
    $userColl->load($possibility['user']);
}

$rolesJson = Zend_Json::encode($rolesArray);
$companiesJson = Zend_Json::encode($companyColl->toArray());
$referenceRC = Zend_Json::encode($this->referenceRC);
?>
<?php
$jScript = <<<JS
require([
    "dojo/dom",
    "dojo/dom-attr",
    "dojo/dom-form",
    "dojo/on",
    "dojo/_base/lang",
    "dojo/query",
    "dojo/router",
    "dojo/store/Memory",
    "core/Layout",
    "core/helper/Validation",
    "dijit/Dialog"
], function(dom, domAttr, domForm, on, lang, query, router, storeMemory, coreLayout, coreValidation, dijitDialog){
    dojo.ready(function(){

        var Layout = new coreLayout({
            timeout: 3000,
            messenger: {
                node: dom.byId('messenger')
                },
            processing: {
                node: dom.byId('loader')
                }
        });

        // Хранилище системных ролей
        var storeRoles = new storeMemory({data: $rolesJson});

        // Хранилище информации о компаниях доступных текущему администратору
        var storeCompanies = new storeMemory({data: $companiesJson});

        // Связка связи Роль-Компания
        var storeReferenceRC = new storeMemory({data: $referenceRC});

        var DialogBox = new dijitDialog();
        var dialogTitles = [
            "Добавление менеджера"
        ];



        storeRoles.query({'id': 0}).forEach(function(items){
            console.log(items);
        });





        // #Страница с менеджерами
        router.register('main', function(){
            // Получение менеджера
            query('[data-action^="getManagerBoard/"]').on('click', function(event){
                event.preventDefault();
                router.go(event.target.getAttribute("data-action"));
            });
            // Добавление менеджера
            query('[data-action^="addManager"]').on('click', function(event){
                event.preventDefault();
                Layout.load({
                    url:    appConfig.baseUrl + '/manager/possibility/add-manager',
                    format: 'html'
                }).then(function(response){
                    DialogBox.set('content', response);
                    DialogBox.set('title', "Добавление менеджера");
                    DialogBox.show();
                }).then(function(){
                    var form = dom.byId("add-manager");
                    var Validation = new coreValidation(form);
                    on(form['send'], 'click', function(event){
                        event.preventDefault();
                        if(Validation.isValid()) {
                            // Отправить сообщение на сервер
                            Layout.send({
                                url:    appConfig.baseUrl + '/manager/possibility/add-manager',
                                args:   domForm.toObject(form)
                            }).then(function(response){
                                if(response.result && response.result != -1) {
                                    DialogBox.hide();
                                    // TODO: Перегрузить список менеджеров
                                } else {
                                    Validation.clear();
                                    Validation.setMessages(response.error);
                                }
                            });
                        }
                      });
                })
            });
        });

        // #Страница с настройками одного менеджера
        router.register('getManagerBoard/:manager', function(event){
            Layout.load({
                url:    '../../../manager/possibility/get-manager-board',
                format: 'html',
                args:   event.params
            }).then(function(response){
                Layout.place(dom.byId('contentManagers'), response);
            }).then(function(){
                // Навешиваем события
                query('[data-action^="editPossibilityObjects"]').on('click', function(event){
                    event.preventDefault();
                    dojo.publish('editPossibilityObjects', {possibility: domAttr.get(event.target, "data-action").split('/')[1]});
                });
            }).then(function(){
                query('[data-action^="addManagerRole"]').on('click', function(event){
                    event.preventDefault();

                    Layout.load({
                        url:    appConfig.baseUrl + '/manager/possibility/add-manager-role',
                        format: 'html',
                        args:   {manager: domAttr.get(event.target, "data-action").split('/')[1]}
                    }).then(function(){
                        // Обработчик на изменение Роли
                        query('[data-action^="changeRole"]').on('change', function(event){
                            storeReferenceRC.query(domForm.fieldToObject(event.target)).forEach(function(items){

                            })
                         })
                    })
                });
            })
        });

        // Startup must be called in order to "activate" the router
        router.startup();
        router.go('main');

        dojo.subscribe('editPossibilityObjects', function(args){
            Layout.load({
                url:    appConfig.baseUrl + '/manager/possibility/edit-possibility-objects',
                format: 'html',
                args:   args
            }).then(function(response){
                DialogBox.set('content', response);
                DialogBox.set('title', "Добавление менеджера");
                DialogBox.show();
            })
        });

    });
});

JS;
$this->headScript()->appendScript($jScript, $type = 'text/javascript')
?>
<div id="contentManagers">
    <table class="table table-bordered">
        <colgroup>
            <col width="50">
            <col>
        </colgroup>
        <thead>
            <tr>
                <th>#</th>
                <th>Пользователь</th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <td colspan="2">
                    <button type="button" data-action="addManager" name="add">Добавить</button>
                    <button type="button" data-action="removeManager" name="remove" id="testme">Удалить</button>
                </td>
            </tr>
        </tfoot>
        <tbody>
            <?php foreach($userColl->getDataIterator() as $manager): ?>
            <tr>
                <td><input type="checkbox"/></td>
                <td><a data-action="getManagerBoard/<?=$manager->get('id')?>"><?=$manager->get('email')?></a></td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
</div>